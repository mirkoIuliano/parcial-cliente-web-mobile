# Tailwind
Tailwind es un framework de CSS "orientado a utilidades" (utility-first).
Cuando decimos "utilidades" en este contexto, nos referimos a "clases de
utilidad".
Una clase de utilidad es una clase que, típicamente, solo tiene un único
estilo asignado.
Por dar algunos ejemplos:

    .text-red-700 {
        color: red;
    }

    .p-4 {
        padding: 1rem;
    }

    .flex {
        display: flex;
    }

La filosofía de estos frameworks es, entonces, crear el diseño a través
de la "composición" de estas clases en el HTML.

Esto contrasta fuertemente con la filosofía de otros frameworks, como 
Bootstrap. 
Bootstrap está orientado más a "componentes". Esto implica que tenemos
clases con nombres "semánticos" (ej: btn, navbar, col, form-control) que
pueden estar implementando múltiples estilos cada una.


## Instalando Tailwind en nuestro proyecto de Vite.
https://tailwindcss.com/docs/guides/vite#vue

Para incluir Tailwind, necesitamos seguir los siguientes pasos:

1. Instalar las dependencias:
    npm install -D tailwindcss postcss autoprefixer
    npm install --save-dev tailwindcss postcss autoprefixer

2. Publicar los archivos de configuración de Tailwind y PostCSS:
    npx tailwindcss init -p

3. Tenemos que configurar en el tailwind.config.js cuáles son los archivos 
de nuestro proyecto que Tailwnid debe "observar":
    /** @type {import('tailwindcss').Config} */
    export default {
        content: [
            "./index.html",
            "./src/**/*.{vue,js,jsx,ts,tsx}",
        ],
        theme: {
            extend: {},
        },
        plugins: [],
    }

4. Agregamos en nuestro archivo de CSS las clases de Tailwind a través de
sus directivas:
    @tailwind base;
    @tailwind components;
    @tailwind utilities;


Al completar estos pasos, arrancamos el servidor de Vite.
Si lo hicimos bien, y no tenemos ningún otro estilo de CSS aplicado,
deberíamos ver que queda la página con todos los elementos viéndose igual.
Los párrafos, los <h*>, los <a>, todos deben verse igual.

Esto se debe a que Tailwind implementa un "reset" de CSS.